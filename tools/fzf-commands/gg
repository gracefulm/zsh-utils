#!/bin/zsh -e

#
# gg is a function that can search with git grep and use fzf to perform actions such as editing and browsing on the selected files.
#
function gg() {
    # actions on target files
    typeset -A actions
    actions=(
        view           ">> view"
        edit           ">> edit"
        edit-buffer    ">> edit(with buffer)"
    )
    # prompt of fzf
    typeset -A prompts
    prompts=(
        gg     "git grep> "
        act    "choose action> "
    )
    # selected files by git grep with fzf
    readonly SELECTED_FILE_AND_LINES=$(git grep -in $1 | fzf --prompt "${prompts[gg]}" | awk -F: '{printf "+"$2" "$1" "}')
    readonly SELECTED_FILES_NUM="`echo $SELECTED_FILE_AND_LINES | sed 's/\+[0-9]*//g' | tr ' ' '\n' | wc -w`"
    # files without duplicates
    readonly UNIQUED_FILES="`echo $SELECTED_FILE_AND_LINES | sed 's/\+[0-9]*//g' | tr ' ' '\n' | sort -u | tr '\n' " "`"
    readonly UNIQUED_FILES_NUM="`echo $SELECTED_FILE_AND_LINES | sed 's/\+[0-9]*//g' | tr ' ' '\n' | sort -u | wc -w`"

    # slect a condition from the menu and execute the action
    if [ $SELECTED_FILES_NUM -eq 0 ]; then
        _write-stderror "Did not hit or canceled"
        return 1
    elif [ $SELECTED_FILES_NUM -gt 1 ] && [ $UNIQUED_FILES_NUM -gt 1 ]; then
        action="`echo -e "${actions[view]}\n${actions[edit-buffer]}" | fzf --prompt "${prompts[act]}"`"
        if [[ "$action" = "${actions[edit-buffer]}" ]]; then
            echo "$action on $UNIQUED_FILES"
            eval vim $UNIQUED_FILES
        elif [[ "$action" = "${actions[view]}" ]]; then
            echo "$action on $UNIQUED_FILES"
            eval bat $UNIQUED_FILES
        else
            _print-error-message
            return 1
        fi
    elif [ $SELECTED_FILES_NUM -gt 1 ] && [ $UNIQUED_FILES_NUM -eq 1 ]; then
        action="`echo -e "${actions[view]}\n${actions[edit]}" | fzf --prompt "${prompts[act]}"`"
        if [[ "$action" = "${actions[edit]}" ]]; then
            echo "$action on $UNIQUED_FILES"
            eval vim $UNIQUED_FILES
        elif [[ "$action" = "${actions[view]}" ]]; then
            echo "$action on $UNIQUED_FILES"
            eval bat $UNIQUED_FILES
        else
            _print-error-message
            return 1
        fi
    else
        action="`echo -e "${actions[view]}\n${actions[edit]}" | fzf --prompt "${prompts[act]}"`"
        if [[ "$action" = "${actions[edit]}" ]]; then
            echo "$action on $UNIQUED_FILES"
            eval vim $SELECTED_FILE_AND_LINES
        elif [[ "$action" = "${actions[view]}" ]]; then
            echo "$action on $UNIQUED_FILES"
            eval bat $UNIQUED_FILES
        else
            _print-error-message
            return 1
        fi
    fi
}
