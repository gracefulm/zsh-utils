#!/bin/zsh -e

#
# pbr is a function that enable to operate git branch efficiently.
#
function pbr() {
    # actions on target branches
    typeset -A actions
    actions=(
        delete          ">> delete"
        delete-force    ">> delete(force)"
        switch          ">> switch"
    )
    #prompt of peco
    typeset -A prompts
    prompts=(
        gb     "git branch>"
        act    "choose action>"
    )
    # select branches with peco
    readonly TARGET_BRANCH=$(git branch | peco --prompt "${prompts[gb]}" | sed -e "s/^\*\s*//g" | tr -d " " | tr "\n" " ")
    # number of selected branches
    readonly BRANCH_NUM=`echo $TARGET_BRANCH | wc -w`

    # select a condition from the menu and execute the action
    if [ ${#TARGET_BRANCH} -eq 0 ]; then
        echo "Did not hit or canceled" >&2
        return 1
    elif [ $BRANCH_NUM -gt 1 ]; then
        action="`echo -e "${actions[delete]}\n${actions[delete-force]}" | peco --prompt "${prompts[act]}"`"
        if [[ "$action" = "${actions[delete]}" ]]; then
            echo "$action on $TARGET_BRANCH"
            eval git branch -d $TARGET_BRANCH
        elif [[ "$action" = "${actions[delete-force]}" ]]; then
            echo "$action on $TARGET_BRANCH"
            eval git branch -D $TARGET_BRANCH
        else
            echo "Canceled or something went wrong" >&2
            return 1
        fi
    else
        action="`echo -e "${actions[switch]}\n${actions[delete]}\n${actions[delete-force]}" | peco --prompt "${prompts[act]}"`"
        if [[ "$action" = "${actions[switch]}" ]]; then
            echo "$action on $TARGET_BRANCH"
            eval git switch $TARGET_BRANCH
        elif [[ "$action" = "${actions[delete]}" ]]; then
            echo "$action on $TARGET_BRANCH"
            eval git branch -d $TARGET_BRANCH
        elif [[ "$action" = "${actions[delete-force]}" ]]; then
            echo "$action on $TARGET_BRANCH"
            eval git branch -D $TARGET_BRANCH
        else
            echo "Canceled or something went wrong" >&2
            return 1
        fi
    fi
}

